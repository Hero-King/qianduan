/**
 *  JS 原型  每一个构造函数都有一个属性叫 prototype  是一个对象,可以给他动态添加属性和方法  这些属性和方法对象可以
 * 直接调用
 * 
    自己创建出来的对象有个属性 __proto__ 指向了构造函数的原型对象
    对象的__proto__属性和构造函数中的prototype属性是一个对象
    原型对象中有个属性constructor 指向了构造函数
    原型对象是对象,它的__proto__是object对象,即Object构造函数的原型对象  在往上就是null

    通常我们自己定义的构造函数里面定义一些属性,方法定义到原型对象上面达到节约内存的目的
    Student.prototype = {
         方法
    }
    但是这样导致对象的原型里面缺少constructor属性
    可以在上面添加该属性 constructor: Student
    注意: 想要使用自己定义的构造和原型对象,需要在定义好了原型后在new对象
    给内置对象的原型对象添加属性或者方法只能通过.的方式 Array.prototype.getSum= 不能Array.protorype={}  保护作用
    在原型对象里面  this表示啥?  代表调用这个属性/方法的实例啊  记住了

    体会好面向对象编程
    所有的JS文件命名的变量都是在全局作用域里面的,难免会存在命令冲突的问题.我们可以使用匿名函数自调用的方式降低冲突,但是我们怎么使用
    匿名函数中的重要内容呢? 可以在匿名中 挂载使用的对象到window对象下面
 * 
 * 
 * 










 
 */